library(corncob)
library(ggplot2)
library(knitr)
library(dplyr)
library(reshape2)
library(tibble)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
setwd("~/Documents/Coral_Nursery_CNAT_DLAB")
path <- "~/Documents/Coral_Nursery_CNAT_DLAB/Coral_Nursery_cutadapt"
list.files(path)
fnFs <- sort(list.files(path, pattern="_R1_cut.fastq.gz", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_R2_cut.fastq.gz", full.names = TRUE))
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
# Perform filtering and trimming
filt_path <- file.path(path, "filtered")
filtFs <- file.path(filt_path, paste0(sample.names, "_F_filt.fastq.gz"))
filtRs <- file.path(filt_path, paste0(sample.names, "_R_filt.fastq.gz"))
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(150,150),
maxN=0, maxEE=c(2,2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
head(out)
# Learn the Error Rates, it TAKES TIME!
errF <- learnErrors(filtFs, multithread=TRUE)
errR <- learnErrors(filtRs, multithread=TRUE)
plotErrors(errF, nominalQ=TRUE)
# Dereplicate the filtered fastq files
derepFs <- derepFastq(filtFs, verbose=TRUE)
derepRs <- derepFastq(filtRs, verbose=TRUE)
names(derepFs) <- sample.names
names(derepRs) <- sample.names
# Infer the sequence variants in each sample
dadaFs <- dada(derepFs, err=errF, multithread=TRUE)
dadaRs <- dada(derepRs, err=errR, multithread=TRUE)
# Inspecting the dada-class object returned by dada:
dadaFs[[1]]
# Merge the denoised forward and reverse reads:
mergers <- mergePairs(dadaFs, derepFs, dadaRs, derepRs, verbose=TRUE)
# Inspect the merger data.frame from the first sample
head(mergers[[1]])
# Construct sequence table
seqtab <- makeSequenceTable(mergers)
dim(seqtab)
# Inspect distribution of sequence lengths
table(nchar(getSequences(seqtab)))
#Remove chimeric sequences:
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=TRUE, verbose=TRUE)
dim(seqtab.nochim)
sum(seqtab.nochim)/sum(seqtab) # proportion of non-chimeric taxa
#Track reads through the pipeline
getN <- function(x) sum(getUniques(x))
track <- cbind(out, sapply(dadaFs, getN), sapply(mergers, getN), rowSums(seqtab))
colnames(track) <- c("input", "filtered", "denoised", "merged", "tabled", "nonchim")
track <- cbind(out, sapply(dadaFs, getN), sapply(mergers, getN), rowSums(seqtab.nochim))
colnames(track) <- c("input", "filtered", "denoised", "merged", "tabled", "nonchim")
View(track)
colnames(track) <- c("input", "filtered", "denoised", "merged", "nonchim")
rownames(track) <- sample.names
head(track)
write.table(track, "dada_read_stats.txt",sep="\t",col.names=NA)
saveRDS(seqtab.nochim, "~/Documents/Coral_Nursery_CNAT_DLAB/seqtab.nochim.rds")
taxa <- assignTaxonomy(seqtab.nochim, "~/Documents/silva_nr99_v138.2_toGenus_trainset.fa.gz", multithread=TRUE)
# FIX the NAs in the taxa table
taxon <- as.data.frame(taxa,stringsAsFactors=FALSE)
taxon$Phylum[is.na(taxon$Phylum)] <- taxon$Kingdom[is.na(taxon$Phylum)]
taxon$Class[is.na(taxon$Class)] <- taxon$Phylum[is.na(taxon$Class)]
taxon$Order[is.na(taxon$Order)] <- taxon$Class[is.na(taxon$Order)]
taxon$Family[is.na(taxon$Family)] <- taxon$Order[is.na(taxon$Family)]
taxon$Genus[is.na(taxon$Genus)] <- taxon$Family[is.na(taxon$Genus)]
write.table(taxon,"silva_taxa_table.txt",sep="\t",col.names=NA)
write.table(seqtab.nochim, "silva_otu_table.txt",sep="\t",col.names=NA)
# Create phyloseq object from otu and taxonomy tables from dada2, along with the sample metadata.
otu <- read.table("silva_otu_table.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_taxa_table.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata.txt",sep="\t",header=T,row.names=1)
samples<-read.table("metadata.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
# remove chloroplasts and mitochondria and Eukaryota
get_taxa_unique(ps, "Family") #
get_taxa_unique(ps, "Order") #
get_taxa_unique(ps, "Kingdom") #
ps <- subset_taxa(ps, Family !="Mitochondria")
ps <- subset_taxa(ps, Order !="Chloroplast")
ps <- subset_taxa(ps, Kingdom !="Eukaryota")
ps <- subset_taxa(ps, Kingdom !="NA")
get_taxa_unique(ps, "Family") #
get_taxa_unique(ps, "Order") #
get_taxa_unique(ps, "Kingdom") #
ps
# Now export cleaned otu and taxa tables from phyloseq for future reference
otu = as(otu_table(ps), "matrix")
taxon = as(tax_table(ps), "matrix")
metadata = as(sample_data(ps), "matrix")
write.table(otu,"silva_nochloronomito_otu_table.txt",sep="\t",col.names=NA)
write.table(taxon,"silva_nochloronomito_taxa_table.txt",sep="\t",col.names=NA)
# export ASV table as relative abundance
ps_ra<-transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
otu_ra = as(otu_table(ps_ra), "matrix")
write.table(otu_ra,"silva_nochloronomito_otu_table_RA.txt",sep="\t",col.names=NA)
View(metadata)
dada<-read.table("dada_read_stats.txt",sep="\t",header=TRUE)
View(dada)
names(dada)[1]<-"sample"
View(dada)
dada<-read.table("dada_read_stats.txt",sep="\t",header=TRUE)
names(dada)[1]<-"sample"
meta<-read.table("metadata.txt",sep="\t",header=TRUE)
meta_dada<-merge(meta,dada,by="sample")
View(meta_dada)
write.table(meta_dada, "metadata.txt",sep="\t",col.names=NA)
otu <- read.table("silva_nochloronomito_otu_table.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_BS2.txt",sep="\t",header=T,row.names=1)
samples<-read.table("metadata.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
View(samples)
samples<-read.table("metadata.txt",sep="\t",header=T,row.names=1)
View(samples)
dada<-read.table("dada_read_stats.txt",sep="\t",header=TRUE)
names(dada)[1]<-"sample"
meta<-read.table("metadata.txt",sep="\t",header=TRUE)
meta_dada<-merge(meta,dada,by="sample")
View(meta_dada)
write.table(meta_dada, "metadata.txt",sep="\t",col.names=NA)
View(meta_dada)
dada<-read.table("dada_read_stats.txt",sep="\t",header=TRUE)
names(dada)[1]<-"sample"
meta<-read.table("metadata.txt",sep="\t",header=TRUE)
meta_dada<-merge(meta,dada,by="sample")
View(meta_dada)
write.table(meta_dada, "metadata.txt",sep="\t",col.names=NA)
otu <- read.table("silva_nochloronomito_otu_table.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
psnb = subset_samples(ps, colony != "blank")
psnb
ps_qf = subset_samples(psnb, nonchim > 500)
ps_qf
ps_qf <- prune_taxa(taxa_sums(ps_qf) > 1, ps_qf)
ps_qf
ps_blanks = subset_samples(ps, Coral.tag == "blank")
ps_blanks = subset_samples(ps, colony == "blank")
ps_blanks <- prune_taxa(taxa_sums(ps_blanks) > 1, ps_blanks)
ps_blanks
otu_ps_blanks = as(otu_table(ps_blanks), "matrix")
taxon_ps_blanks = as(tax_table(ps_blanks), "matrix")
write.table(otu_ps_blanks,"silva_nochloronomito_otu_table_blanks.txt",sep="\t",col.names=NA)
write.table(taxon_ps_blanks,"silva_nochloronomito_taxa_table_blanks.txt",sep="\t",col.names=NA)
get_taxa_unique(ps_blanks, "Genus")
otu_ps = as(otu_table(ps_qf), "matrix")
taxon_ps = as(tax_table(ps_qf), "matrix")
metadata_ps = as(sample_data(ps_qf), "matrix")
write.table(otu_ps,"silva_nochloronomito_otu_table_qf.txt",sep="\t",col.names=NA)
write.table(taxon_ps,"silva_nochloronomito_taxa_table_qf.txt",sep="\t",col.names=NA)
write.table(metadata_ps,"metadata_qf.txt",sep="\t",col.names=NA)
ps_ra<-transform_sample_counts(ps_qf, function(OTU) OTU/sum(OTU))
otu_ps_ra = as(otu_table(ps_ra), "matrix")
write.table(otu_ps_ra,"silva_nochloronomito_otu_table_RA.txt",sep="\t",col.names=NA)
#explore data
ntaxa(ps_qf) #
get_taxa_unique(ps_qf, "Order") #
get_taxa_unique(ps_qf, "Class") #
ps5<-filter_taxa(ps_qf, function(x) mean(x) >5, TRUE)
ntaxa(ps5)
ps2<-filter_taxa(ps_qf, function(x) mean(x) >2, TRUE)
ntaxa(ps2)
get_taxa_unique(ps2, "Order") #
get_taxa_unique(ps2, "Class")
get_taxa_unique(ps2, "Genus")
View(ps2)
otu_ps2 = as(otu_table(ps2), "matrix")
taxon_ps2 = as(tax_table(ps2), "matrix")
metadata_ps2 = as(sample_data(ps2), "matrix")
write.table(otu_ps2,"silva_nochloronomito_otu_table_ps2.txt",sep="\t",col.names=NA)
write.table(taxon_ps2,"silva_nochloronomito_taxa_table_ps2.txt",sep="\t",col.names=NA)
write.table(metadata_ps2,"metadata_ps2.txt",sep="\t",col.names=NA)
# also write out ASV table with relative abundance
ps2_ra<-transform_sample_counts(ps2, function(OTU) OTU/sum(OTU))
otu_ps2_ra = as(otu_table(ps2_ra), "matrix")
write.table(otu_ps2_ra,"silva_nochloronomito_otu_table_ps2_RA.txt",sep="\t",col.names=NA)
ps2
library(dada2)
library(phyloseq)
library(CoDaSeq)
library(vegan)
library(pairwiseAdonis)
library(corncob)
library(ggplot2)
library(knitr)
library(dplyr)
library(reshape2)
library(tibble)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
otu <- read.table("silva_nochloronomito_otu_table_ps2_RA.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps2_ra <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps2_ra
get_taxa_unique(ps2_ra, "Family") #
get_taxa_unique(ps2_ra, "Class")
get_taxa_unique(ps2_ra, "Order")
get_taxa_unique(ps2_ra, "Genus")
library(randomcoloR)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
n <- 33
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
p1=plot_bar(ps2_ra, "colony" ,fill="Class")+
facet_grid(fraction~type,scales="free",space="free")+
geom_bar(aes(fill=Class), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
View(samples)
p1=plot_bar(ps2_ra, "colony" ,fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
p1=plot_bar(ps2_ra, fill="Order")+
facet_grid(coral.species~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
otu <- read.table("silva_nochloronomito_otu_table_ps2_RA.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps2_ra <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps2_ra
View(samples)
n <- 33
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
p1=plot_bar(ps2_ra, fill="Order")+
facet_grid(coral.species~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
View(samples)
ps2_cnat = subset_samples(ps2_ra, coral.species == "Colpophyllia natans")
ps2_cnat
ps2_dlab = subset_samples(ps2_ra, coral.species == "Diploria labyrinthiformis")
ps2_dlab
sample_data(ps2_cnat)$timepoint<-factor(sample_data(ps2_cnat)$timepoint,levels=c("initial","2-month"))
sample_data(ps2_dlab)$timepoint<-factor(sample_data(ps2_dlab)$timepoint,levels=c("initial","2-month"))
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
sample_data(ps2_cnat)$timepoint<-factor(sample_data(ps2_cnat)$timepoint,levels=c("Initial","2-month"))
sample_data(ps2_dlab)$timepoint<-factor(sample_data(ps2_dlab)$timepoint,levels=c("Initial","2-month"))
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
# load in data and create phyloseq object
otu <- read.table("silva_nochloronomito_otu_table_ps2_RA.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps2_ra <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps2_ra # 89 taxa and 162 samples
get_taxa_unique(ps2_ra, "Class") # 14 classes
get_taxa_unique(ps2_ra, "Order") # 33 orders
get_taxa_unique(ps2_ra, "Family") # 46 families
get_taxa_unique(ps2_ra, "Genus") # 60 generaget_taxa_unique(ps2_ra, "Family") # 46
# Plot orders
# generate high-contrast color combinations
n <- 33
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
# subset coral species to generate separate plots
ps2_cnat = subset_samples(ps2_ra, coral.species == "Colpophyllia natans")
ps2_cnat  # 89 taxa and 82 samples
sample_data(ps2_cnat)$timepoint<-factor(sample_data(ps2_cnat)$timepoint,levels=c("Initial","2-month"))
ps2_dlab = subset_samples(ps2_ra, coral.species == "Diploria labyrinthiformis")
ps2_dlab  # 89 taxa and 80 samples
sample_data(ps2_dlab)$timepoint<-factor(sample_data(ps2_dlab)$timepoint,levels=c("Initial","2-month"))
#pdf("barchart_Order.pdf",width=11)
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
#dev.off()
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
p2=plot_bar(ps2_dlab, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p2
library(cowplot)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
p3<-plot_grid(p1+p2)
p3<-plot_grid(p1,p2,nrows=1)
p3
p3<-plot_grid(p1,p2,nrows=2)
p3
p3<-plot_grid(p1,p2)
p3
otu <- read.table("silva_nochloronomito_otu_table_ps2_RA.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps2_ra <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps2_ra
n <- 33
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
# subset coral species to generate separate plots
ps2_cnat = subset_samples(ps2_ra, coral.species == "Colpophyllia natans")
ps2_cnat  # 89 taxa and 82 samples
sample_data(ps2_cnat)$timepoint<-factor(sample_data(ps2_cnat)$timepoint,levels=c("Initial","2-month"))
ps2_dlab = subset_samples(ps2_ra, coral.species == "Diploria labyrinthiformis")
ps2_dlab  # 89 taxa and 80 samples
sample_data(ps2_dlab)$timepoint<-factor(sample_data(ps2_dlab)$timepoint,levels=c("Initial","2-month"))
p1=plot_bar(ps2_cnat, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
p2=plot_bar(ps2_dlab, fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p2
p3<-plot_grid(p1,p2)
p3
p3<-plot_grid(p1+theme(legend.position="none"),p2)
p3
p3<-plot_grid(p1+theme(legend.position="none"),p2,align = 'vh',nrow=1)
p3
p3<-plot_grid(p1+theme(legend.position="none"),p2,align = 'vh',nrow=2)
p3
p1=plot_bar(ps2_cnat, "colony", fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
p2=plot_bar(ps2_dlab, "colony", fill="Order")+
facet_grid(.~timepoint,scales="free",space="free")+
geom_bar(aes(fill=Order), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p2
p3<-plot_grid(p1+theme(legend.position="none"),p2,align = 'vh',nrow=2)
p3
