# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
time<-as.character(samples$timepoint)
site<-as.character(samples$site)
species<-as.character(samples$coral.species)
colony<-as.character(samples$colony)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm4<-pairwise.adonis2(dist.clr~site/coral.species,as(sample_data(ps),"data.frame"), strata='coral.species')
perm4<-pairwise.adonis2(dist.clr~site/coral.species,as(sample_data(ps_qf),"data.frame"), strata='coral.species')
print(perm4)
library(dada2)
library(phyloseq)
library(CoDaSeq)
library(vegan)
library(pairwiseAdonis)
library(corncob)
library(ggplot2)
library(randomcoloR)
library(cowplot)
library(knitr)
library(dplyr)
library(reshape2)
library(tibble)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
otu <- read.table("silva_nochloronomito_otu_table_2month.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_2month.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_2month.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
# collapse ASVs into families
ps_fam = tax_glom(ps_qf, "Family")
ps_fam = tax_glom(ps, "Family")
ps_fam
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam
View(samples)
# DA determined relative to first reference level, so set this manually to the initial timepoint
sample_data(ps_fam)$site<-factor(sample_data(ps_fam)$site,levels=c("Pickles Patch","Looe Key Inshore","West Turtle"))
set.seed(1)
time.da <- differentialTest(formula = ~ site + coral.species,
phi.formula = ~ site,
formula_null = ~ coral.species,
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(time.da)
otu <- read.table("silva_nochloronomito_otu_table_2month.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_2month.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_2month.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps # 2032 taxa and 90 samples
# collapse ASVs into families
ps_fam = tax_glom(ps, "Family")
ps_fam # 320 families and 90 samples
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam # 222 families and 90 samples
sample_data(ps_fam)$site<-factor(sample_data(ps_fam)$site,levels=c("Pickles Patch","Looe Key Inshore","West Turtle"))
set.seed(1)
site.da <- differentialTest(formula = ~ site + coral.species,
phi.formula = ~ site,
formula_null = ~ coral.species,
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(site.da)
site.da
site.da$significant_taxa #18
#quick look at results with corncob's plotting feature
plot(site.da, c("Family"))
sigtaxto_df <- function(site.da, ps_fam) {
df.out <- c()
for (i in 1:length(site.da$significant_models)) { #from 1 to the number of significant taxa
df.out = rbind(df.out, site.da$significant_models[[i]]$coefficients[2, 1:4]) #bind the significant taxa with coefficient, std. error, t value, Pr. coefficients[2,] is the DA model output.
}
asv = as.vector(site.da$significant_taxa) #get significant families
Class = as.vector(otu_to_taxonomy(data = ps_fam, site.da$significant_taxa, level = c("Class")))
Order = as.vector(otu_to_taxonomy(data = ps_fam, site.da$significant_taxa, level = c("Order")))
Family = as.vector(otu_to_taxonomy(data = ps_fam, site.da$significant_taxa, level = c("Family")))
df.bind <- as.data.frame(cbind(df.out, asv, Class, Order, Family))
colnames(df.bind) <- c("Estimate", "StdError", "tvalue", "Pr", "asv", "Class", "Order", "Family")
df.bind$Estimate = as.numeric(as.character(df.bind$Estimate)) #estimate column should be numeric
df.bind$StdError = as.numeric(as.character(df.bind$StdError)) #stderror column should be numeric
return(df.bind)
}
df <- sigtaxto_df(site.da, ps_fam) #make a df of the corncob output and the taxonomy
View(df)
### Save these data so you don't have to re-run the model ###
write.table(df, "DA-Families_site_controlling-coral-species.txt", sep="\t",row.names = FALSE)
#quick look at results with corncob's plotting feature
plot(site.da, c("Family"))
#quick look at results with corncob's plotting feature
plot(site.da, c("Family"))
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf #2032 taxa and 152 samples
# collapse ASVs into families
ps_fam = tax_glom(ps_qf, "Family")
ps_fam # 320 families and 152 samples
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam #318 families and 152 samples
# DA determined relative to first reference level, so set this manually to the initial timepoint
sample_data(ps_fam)$timepoint<-factor(sample_data(ps_fam)$timepoint,levels=c("Initial","2-month"))
set.seed(1)
time.da <- differentialTest(formula = ~ timepoint + coral.species,
phi.formula = ~ timepoint,
formula_null = ~ coral.species,
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(time.da)
time.da
time.da$significant_taxa #18
#quick look at results with corncob's plotting feature
plot(time.da, c("Family"))
# Positive values mean that taxon is enriched at 2-month timepoint relative to initial samples
# create a function that will return the values of interest
sigtaxto_df <- function(time.da, ps_fam) {
df.out <- c()
for (i in 1:length(time.da$significant_models)) { #from 1 to the number of significant taxa
df.out = rbind(df.out, time.da$significant_models[[i]]$coefficients[2, 1:4]) #bind the significant taxa with coefficient, std. error, t value, Pr. coefficients[2,] is the DA model output.
}
asv = as.vector(time.da$significant_taxa) #get significant families
Class = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Class")))
Order = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Order")))
Family = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Family")))
df.bind <- as.data.frame(cbind(df.out, asv, Class, Order, Family))
colnames(df.bind) <- c("Estimate", "StdError", "tvalue", "Pr", "asv", "Class", "Order", "Family")
df.bind$Estimate = as.numeric(as.character(df.bind$Estimate)) #estimate column should be numeric
df.bind$StdError = as.numeric(as.character(df.bind$StdError)) #stderror column should be numeric
return(df.bind)
}
df <- sigtaxto_df(time.da, ps_fam) #make a df of the corncob output and the taxonomy
### Save these data so you don't have to re-run the model ###
write.table(df, "DA-Families_time_controlling-coral-species.txt", sep="\t",row.names = FALSE)
# families enriched at 2 months: Rickettsiaceae, Eurycoccales Incertae Sedis, Desulfovibrionaceae, Hyphomonadaceae, Vibrionaceae, Cellvibrionaceae, Terasakiellaceae, Campylobacterales
# families enriched at initial timepoint: Cyclobacteriaceae, Amoebophilaceae, Blastocatellaceae, Caminicellaceae, Microtrichaceae, Vicinamibacteria Subgroup 9, Vicinamibacterales, Caldilineaceae, Cyanobacteriaceae, Nitrosopumilaceae
library(dada2)
library(phyloseq)
library(CoDaSeq)
library(vegan)
library(pairwiseAdonis)
library(corncob)
library(ggplot2)
library(randomcoloR)
library(cowplot)
library(knitr)
library(dplyr)
library(reshape2)
library(tibble)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf
ps_fam = tax_glom(ps_qf, "Family")
ps_fam
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam
ps_fam_ra<-transform_sample_counts(ps_fam, function(OTU) OTU/sum(OTU))
ps_fam_ra
otu_f = as(otu_table(ps_fam_ra), "matrix")
taxon_f = as(tax_table(ps_fam_ra), "matrix")
fam<-t(otu_f)
fam <- as.data.frame(fam)
fam <- tibble::rownames_to_column(fam, "ASV")
taxon_f <- as.data.frame(taxon_f)
taxon_f <- tibble::rownames_to_column(taxon_f, "ASV")
fam_tax <- merge(fam, taxon_f, by="ASV", all=FALSE)
View(fam_tax)
View(fam_tax)
fam_tax$Genus<-NULL
fam_tax$ASV<-NULL
fam_tax$sequence<-NULL
View(fam_tax)
DA1 <- fam_tax %>% filter(Family =='Nitrosopumilaceae') # enriched in initial timepoint
DA2 <- fam_tax %>% filter(Family =='Cyanobacteriaceae') # enriched in initial timepoint (DLAB)
DA3 <- fam_tax %>% filter(Family =='Blastocatellaceae') # enriched in initial timepoint (CNAT)
DA4 <- fam_tax %>% filter(Family =='Amoebophilaceae') # enriched in initial timepoint
DA5 <- fam_tax %>% filter(Family =='Desulfovibrionaceae') # enriched at 2-month timpoint
DA6 <- fam_tax %>% filter(Family =='Hyphomonadaceae') # enriched at 2-month timpoint
DA7 <- fam_tax %>% filter(Family =='Vibrionaceae') # enriched at 2-month timpoint
DA8 <- fam_tax %>% filter(Family =='Terasakiellaceae') # enriched at 2-month timpoint
DA9 <- fam_tax %>% filter(Family =='Campylobacterales') # enriched at 2-month timpoint
DA10 <- fam_tax %>% filter(Family == 'Ga0077536') # depleted at Pickles Patch / enriched at Looe Key and West Turtle (esp. CNAT)
DA_nursery<-rbind(DA1,DA2,DA3,DA4,DA5,DA6,DA7,DA8,DA9,DA10)
View(DA_nursery)
# Merge with metadata for plotting aesthetics
samples <- as.data.frame(samples)
samples <- tibble::rownames_to_column(samples, "sample")
DA_nursery_long<-melt(DA_nursery,value.name="proportion",variable.name="sample",id.vars=c("Kingdom","Phylum","Class","Order","Family"))
View(DA_nursery_long)
DAplot <- merge(DA_nursery_long,samples,by="sample", all=TRUE)
View(DAplot)
unique(DAplot$Class)
DAplotC <- DAplot %>% filter(coral.species =='Colpophyllia natans')
unique(DAplotC$Class)
DAplotD <- DAplot %>% filter(coral.species =='Diploria labyrinthiformis')
unique(DAplotD$Class)
View(DA8)
View(DAplot)
View(DA_nursery)
#set colorblind friendly palette, this is muted_nine plus black and white
cols<-c("Alphaproteobacteria"="#CC6677","Bacteroidia"="#332288","Blastocatellia"="#88CCEE","Campylobacteria"="#999933","Cyanobacteriia"="#44AA99","Desulfovibrionia"="#AA4499","Gammaproteobacteria"="#000000","Nitrososphaeria"="#F9F4EC")
# set aesthetics for each coral species
DAplotC$timepoint<-factor(DAplotC$timepoint,levels=c("Initial","2-month"))
DAplotC$Family<-factor(DAplotC$Family,levels=c("Desulfovibrionaceae","Nitrosopumilaceae","Cyanobacteriaceae","Campylobacterales","Hyphomonadaceae","Blastocatellaceae","Terasakiellaceae","Vibrionaceae","Amoebophilaceae","Ga0077536"))
# set aesthetics for each coral species
DAplotD$timepoint<-factor(DAplotD$timepoint,levels=c("Initial","2-month"))
DAplotD$Family<-factor(DAplotD$Family,levels=c("Desulfovibrionaceae","Nitrosopumilaceae","Cyanobacteriaceae","Campylobacterales","Hyphomonadaceae","Blastocatellaceae","Terasakiellaceae","Vibrionaceae","Amoebophilaceae","Ga0077536"))
pc <- ggplot(DAplotC, aes(sample, Family, fill= Class))+
geom_point(aes(size=proportion*100),alpha=0.8,shape=21)+
scale_size(range = c(0,10), name="Relative abundance")+
scale_fill_manual(values = cols)+
facet_grid(.~timepoint,scales="free",space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())
pc
pd <- ggplot(DAplotD, aes(sample, Family, fill= Class))+
geom_point(aes(size=proportion*100),alpha=0.8,shape=21)+
scale_size(range = c(0,10), name="Relative abundance")+
scale_fill_manual(values = cols)+
facet_grid(.~timepoint,scales="free",space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())
pd
pdf("DA_families_CNAT.pdf", bg ="white", width=11)
pc <- ggplot(DAplotC, aes(sample, Family, fill= Class))+
geom_point(aes(size=proportion*100),alpha=0.8,shape=21)+
scale_size(range = c(0,10), name="Relative abundance")+
scale_fill_manual(values = cols)+
facet_grid(.~timepoint,scales="free",space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())
pc
dev.off()
pdf("DA_families_DLAB.pdf", bg ="white", width=11)
pd <- ggplot(DAplotD, aes(sample, Family, fill= Class))+
geom_point(aes(size=proportion*100),alpha=0.8,shape=21)+
scale_size(range = c(0,10), name="Relative abundance")+
scale_fill_manual(values = cols)+
facet_grid(.~timepoint,scales="free",space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())
pd
dev.off()
otu <- read.table("silva_nochloronomito_otu_table_ps2_RA.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps2_ra <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps2_ra # 89 taxa and 152 samples
get_taxa_unique(ps2_ra, "Family")
ps2_ra_f = tax_glom(ps2_ra, "Family")
ps2_ra_f # 46 families and 152 samples
otu_f = as(otu_table(ps2_ra_f), "matrix")
taxon_f = as(tax_table(ps2_ra_f), "matrix")
fam<-t(otu_f)
fam <- as.data.frame(fam)
fam <- tibble::rownames_to_column(fam, "ASV")
taxon_f <- as.data.frame(taxon_f)
taxon_f <- tibble::rownames_to_column(taxon_f, "ASV")
fam_tax <- merge(fam, taxon_f, by="ASV", all=TRUE)
fam_tax$Genus<-NULL
fam_tax$ASV<-NULL
# Order by total relative abundance and choose top 25 families
fam_tax <- fam_tax %>% mutate("total" = rowSums((fam_tax[,1:152]), na.rm = TRUE))
fam_tax <- fam_tax[order(fam_tax$total, decreasing = TRUE),]
fam25 <- fam_tax[1:25,]
fam25$total<-NULL
# calculate a row with the relative abundance of all other families not included in the top 25 (21 other families), first remove taxonomy
fam25_just25<-fam25[1:152]
# next add up the relative abundances of the top 25 families
fam25_25total<-rbind(fam25_just25, colSums(fam25_just25[,1:152]))
# calculate what is the relative abundance of the other families
fam25_others<-rbind(fam25_25total, 1-fam25_25total[26,])
# add "Others" as value for 5 taxonomy columns
fam25_others$Kingdom = "Others"
fam25_others$Phylum = "Others"
fam25_others$Class = "Others"
fam25_others$Order = "Others"
fam25_others$Family = "Others"
# remove all but the last row
others<-fam25_others[-(1:26),]
# finally, add only the last row back to the original dataframe fam25
fam25_withothers <- rbind(fam25, others)
fam_long<-melt(fam25_withothers,value.name="proportion",variable.name="sample",id.vars=c("Kingdom","Phylum","Class","Order","Family"))
# Merge with metadata for plotting aesthetics
samples <- as.data.frame(samples)
samples <- tibble::rownames_to_column(samples, "sample")
famplot <- merge(fam_long,samples,by="sample", all=TRUE)
famplotC <- famplot %>% filter(coral.species =='Colpophyllia natans')
unique(famplotC$Class) # 12 classes
famplotD <- famplot %>% filter(coral.species =='Diploria labyrinthiformis')
unique(famplotD$Class) # same 12 classes as above
cols<-c("Alphaproteobacteria"="#CC6677","Bacteria"="#117733","Bacteroidia"="#332288","Blastocatellia"="#88CCEE","Campylobacteria"="#999933","Clostridia"="#882255","Cyanobacteriia"="#44AA99","Desulfobulbia"="#DDCC77","Desulfovibrionia"="#AA4499","Gammaproteobacteria"="#000000","Nitrososphaeria"="#F9F4EC","Others"="#999999")
View(famplotC)
#order samples by site West to East (lower keys = Looe, middle keys = West Turtle, upper keys = Pickles)
# retrieve sample names
unique(famplotC$sample)
View(samples)
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
summary(d.pcx)
str(d.pcx)
screeplot(d.pcx)
# Make a pretty PCA plot with ggplot
df_out <- as.data.frame(d.pcx$x)
theme_set(theme_bw()+theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()))
#cols<-c("Colpophyllia natans"="#56B4E9","Diploria labyrinthiformis"="#0072B2")
cols<-c("Initial"="#56B4E9","2-month"="#0072B2")
samples$timepoint<-factor(samples$timepoint,levels=c("Initial","2-month"))
View(samples)
samples$site<-factor(samples$site,levels=c("Looe Key Inshore","West Turtle","Pickles Patch"))
p<-ggplot(df_out,aes(x=PC1,y=PC2,color=samples$timepoint,shape=samples$site))
p<-p+geom_point(size=3)+
theme(axis.title = element_text(size=14))+
theme(axis.text=element_text(size=14))+
theme(legend.title = element_text(size=14))+
theme(legend.text = element_text(size=14))+
theme(strip.text.x = element_text(size=14, face="italic"))+
scale_color_manual(values=cols)+
guides(fill = guide_legend(override.aes=list(shape=21)))+
labs(x=xlab, y=ylab, color="Timepoint",shape="Site")+
facet_grid(.~samples$coral.species)+
ylim(-50,50)+
xlim(-90,90)+
coord_fixed(ratio=1)
p
pdf("PCA.pdf",bg ="white",width=11)
p<-ggplot(df_out,aes(x=PC1,y=PC2,color=samples$timepoint,shape=samples$site))
p<-p+geom_point(size=3)+
theme(axis.title = element_text(size=14))+
theme(axis.text=element_text(size=14))+
theme(legend.title = element_text(size=14))+
theme(legend.text = element_text(size=14))+
theme(strip.text.x = element_text(size=14, face="italic"))+
scale_color_manual(values=cols)+
guides(fill = guide_legend(override.aes=list(shape=21)))+
labs(x=xlab, y=ylab, color="Timepoint",shape="Site")+
facet_grid(.~samples$coral.species)+
ylim(-50,50)+
xlim(-90,90)+
coord_fixed(ratio=1)
p
dev.off()
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm1a<-adonis2(dist.clr~colony,as(sample_data(ps_qf),"data.frame"))
print(perm1a)
otu <- read.table("silva_nochloronomito_otu_table_ps2_RA.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps2_ra <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps2_ra # 89 taxa and 152 samples
get_taxa_unique(ps2_ra, "Family") # 46 families
# Plotting most abundant families - first collapse ASVs into families then reshape data for plotting
ps2_ra_f = tax_glom(ps2_ra, "Family")
ps2_ra_f # 46 families and 152 samples
otu_f = as(otu_table(ps2_ra_f), "matrix")
taxon_f = as(tax_table(ps2_ra_f), "matrix")
fam<-t(otu_f)
fam <- as.data.frame(fam)
fam <- tibble::rownames_to_column(fam, "ASV")
taxon_f <- as.data.frame(taxon_f)
taxon_f <- tibble::rownames_to_column(taxon_f, "ASV")
fam_tax <- merge(fam, taxon_f, by="ASV", all=TRUE)
fam_tax$Genus<-NULL
fam_tax$ASV<-NULL
# Order by total relative abundance and choose top 25 families
fam_tax <- fam_tax %>% mutate("total" = rowSums((fam_tax[,1:152]), na.rm = TRUE))
fam_tax <- fam_tax[order(fam_tax$total, decreasing = TRUE),]
fam25 <- fam_tax[1:25,]
fam25$total<-NULL
# calculate a row with the relative abundance of all other families not included in the top 25 (21 other families), first remove taxonomy
fam25_just25<-fam25[1:152]
# next add up the relative abundances of the top 25 families
fam25_25total<-rbind(fam25_just25, colSums(fam25_just25[,1:152]))
# calculate what is the relative abundance of the other families
fam25_others<-rbind(fam25_25total, 1-fam25_25total[26,])
# add "Others" as value for 5 taxonomy columns
fam25_others$Kingdom = "Others"
fam25_others$Phylum = "Others"
fam25_others$Class = "Others"
fam25_others$Order = "Others"
fam25_others$Family = "Others"
# remove all but the last row
others<-fam25_others[-(1:26),]
# finally, add only the last row back to the original dataframe fam25
fam25_withothers <- rbind(fam25, others)
fam_long<-melt(fam25_withothers,value.name="proportion",variable.name="sample",id.vars=c("Kingdom","Phylum","Class","Order","Family"))
# Merge with metadata for plotting aesthetics
samples <- as.data.frame(samples)
samples <- tibble::rownames_to_column(samples, "sample")
famplot <- merge(fam_long,samples,by="sample", all=TRUE)
# separate by coral species
famplotC <- famplot %>% filter(coral.species =='Colpophyllia natans')
unique(famplotC$Class) # 12 classes
# [1] "Gammaproteobacteria" "Bacteroidia"         "Alphaproteobacteria" "Blastocatellia"      "Campylobacteria"
# [6] "Cyanobacteriia"      "Nitrososphaeria"     "Desulfovibrionia"    "Desulfobulbia"       "Clostridia"
# [11] "Bacteria"            "Others"
famplotD <- famplot %>% filter(coral.species =='Diploria labyrinthiformis')
unique(famplotD$Class) # same 12 classes as above
#set colorblind friendly palette, this is muted_nine plus black and white
cols<-c("Alphaproteobacteria"="#CC6677","Bacteria"="#117733","Bacteroidia"="#332288","Blastocatellia"="#88CCEE","Campylobacteria"="#999933","Clostridia"="#882255","Cyanobacteriia"="#44AA99","Desulfobulbia"="#DDCC77","Desulfovibrionia"="#AA4499","Gammaproteobacteria"="#000000","Nitrososphaeria"="#F9F4EC","Others"="#999999")
# set aesthetics for each coral species
famplotC$timepoint<-factor(famplotC$timepoint,levels=c("Initial","2-month"))
famplotC$Family<-factor(famplotC$Family,levels=c("Others","Bacteroidia","Burkholderiaceae","Rhodospirillaceae","Paraspirulinaceae","AB1","Alphaproteobacteria","Kiloniellaceae","Bacteria","Fusibacteraceae","Woeseiaceae","Endozoicomonadaceae","Desulfocapsaceae","Desulfovibrionaceae","Nitrosopumilaceae","Cyanobacteriaceae","Phormidiaceae","Campylobacterales","Hyphomonadaceae","Flavobacteriaceae","Blastocatellaceae","Paracoccaceae","Terasakiellaceae","Vibrionaceae","Amoebophilaceae","Ga0077536"))
View(famplotC)
#order samples by site West to East (lower keys = Looe, middle keys = West Turtle, upper keys = Pickles)
famplotC$sample<-factor(famplotC$sample,levels=c("CN034-1","CN034-2","CN034-3","CN034-4","CN034-5","CN034-6","CN035-1","CN035-2","CN035-3","CN035-4","CN035-5","CN035-6","CN036-3","CN036-4","CN036-5","CN036-6","CN037-1","CN037-2","CN037-3","CN037-4","CN037-5","CN037-6","CN038-1","CN038-2","CN038-3","CN038-4","CN038-5","CN038-6","CN021-1","CN021-2","CN021-3","CN021-4","CN021-5","CN021-6","CN022-1","CN022-2","CN022-4","CN022-5","CN022-6","CN026-1","CN026-3","CN026-4","CN026-5","CN026-6","CN027-1","CN27-2","CN027-3","CN027-4","CN027-5","CN027-6","CN028-1","CN028-2","CN028-3","CN028-4","CN028-5","CN028-6","CN041-2","CN041-4","CN041-5","CN041-6","CN042-4","CN042-5","CN042-6","CN043-1","CN043-4","CN043-5","CN043-6","CN044-1","CN044-4","CN044-5","CN044-6","CN045-1","CN045-4","CN045-5","CN045-6"))
pc <- ggplot(famplotC, aes(sample, Family, fill= Class))+
geom_point(aes(size=proportion*100),alpha=0.8,shape=21)+
scale_size(range = c(0,10), name="Relative abundance")+
scale_fill_manual(values = cols)+
facet_grid(.~timepoint,scales="free",space="free")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())
pc
unique(famplotC$sample)
