otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf #2032 taxa and 152 samples
#Select CNAT samples only
ps_cnat = subset_samples(ps_qf, coral.species == "Colpophyllia natans")
ps_cnat #2032 taxa and 75 samples
# collapse ASVs into families
ps_fam = tax_glom(ps_cnat, "Family")
ps_fam # 320 families and 75 samples
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam #244 families and 75 samples
# DA determined relative to first reference level, so set this manually to the initial timepoint
sample_data(ps_fam)$timepoint<-factor(sample_data(ps_fam)$timepoint,levels=c("Initial","2-month"))
set.seed(1)
time.da <- differentialTest(formula = ~ timepoint,
phi.formula = ~ timepoint,
formula_null = ~ 1,
phi.formula_null = ~ timepoint,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(time.da)
time.da
time.da$significant_taxa #1
#quick look at results with corncob's plotting feature
plot(time.da, c("Family"))
# Positive values mean that taxon is enriched at 2-month timepoint relative to initial samples
# CNAT: only Blastocatellaceae is DA over time, more abundant in initial timepoint
# create a function that will return the values of interest
sigtaxto_df <- function(treatment.da, ps_fam) {
df.out <- c()
for (i in 1:length(treatment.da$significant_models)) { #from 1 to the number of significant taxa
df.out = rbind(df.out, treatment.da$significant_models[[i]]$coefficients[2, 1:4]) #bind the significant taxa with coefficient, std. error, t value, Pr. coefficients[2,] is the DA model output.
}
asv = as.vector(treatment.da$significant_taxa) #get significant families
Class = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Class")))
Order = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Order")))
Family = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Family")))
df.bind <- as.data.frame(cbind(df.out, asv, Class, Order, Family))
colnames(df.bind) <- c("Estimate", "StdError", "tvalue", "Pr", "asv", "Class", "Order", "Family")
df.bind$Estimate = as.numeric(as.character(df.bind$Estimate)) #estimate column should be numeric
df.bind$StdError = as.numeric(as.character(df.bind$StdError)) #stderror column should be numeric
return(df.bind)
}
df <- sigtaxto_df(time.da, ps_fam) #make a df of the corncob output and the taxonomy
### Save these data so you don't have to re-run the model ###
write.table(df, "DA-Families_time_CNAT.txt", sep="\t",row.names = FALSE)
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf
ps_fam = tax_glom(ps_dlab, "Family")
ps_fam = tax_glom(ps_qf, "Family")
ps_fam
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam
# DA determined relative to first reference level, so set this manually to the initial timepoint
sample_data(ps_fam)$timepoint<-factor(sample_data(ps_fam)$timepoint,levels=c("Initial","2-month"))
set.seed(1)
time.da <- differentialTest(formula = ~ timepoint + coral.species,
phi.formula = ~ timepoint,
formula_null = ~ coral.species,
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(time.da)
time.da
time.da$significant_taxa #4
#quick look at results with corncob's plotting feature
plot(time.da, c("Family"))
# create a function that will return the values of interest
sigtaxto_df <- function(treatment.da, ps_fam) {
df.out <- c()
for (i in 1:length(treatment.da$significant_models)) { #from 1 to the number of significant taxa
df.out = rbind(df.out, treatment.da$significant_models[[i]]$coefficients[2, 1:4]) #bind the significant taxa with coefficient, std. error, t value, Pr. coefficients[2,] is the DA model output.
}
asv = as.vector(treatment.da$significant_taxa) #get significant families
Class = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Class")))
Order = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Order")))
Family = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Family")))
df.bind <- as.data.frame(cbind(df.out, asv, Class, Order, Family))
colnames(df.bind) <- c("Estimate", "StdError", "tvalue", "Pr", "asv", "Class", "Order", "Family")
df.bind$Estimate = as.numeric(as.character(df.bind$Estimate)) #estimate column should be numeric
df.bind$StdError = as.numeric(as.character(df.bind$StdError)) #stderror column should be numeric
return(df.bind)
}
df <- sigtaxto_df(time.da, ps_fam) #make a df of the corncob output and the taxonomy
### Save these data so you don't have to re-run the model ###
write.table(df, "DA-Families_time_controlling-coral-species.txt", sep="\t",row.names = FALSE)
library(dada2)
library(phyloseq)
library(CoDaSeq)
library(vegan)
library(pairwiseAdonis)
library(corncob)
library(ggplot2)
library(randomcoloR)
library(cowplot)
library(knitr)
library(dplyr)
library(reshape2)
library(tibble)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
time<-as.character(samples$timepoint)
site<-as.character(samples$site)
species<-as.character(samples$coral.species)
colony<-as.character(samples$colony)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm3<-pairwise.adonis2(dist.clr~timepoint/colony,as(sample_data(ps_qf),"data.frame"), strata='colony')
print(perm3)
perm4<-pairwise.adonis2(dist.clr~colony/timepoint,as(sample_data(ps_qf),"data.frame"), strata='timepoint')
print(perm4)
perms<-adonis2(dist.clr~timepoint,as(sample_data(ps_qf),"data.frame"), strata = colony)
print(perms)
perms2<-adonis2(dist.clr~colony,as(sample_data(ps_qf),"data.frame"), strata = time)
print(perms2)
otu <- read.table("silva_nochloronomito_otu_table_2month.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_2month.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_2month.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
site<-as.character(samples$site)
species<-as.character(samples$coral.species)
colony<-as.character(samples$colony)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm<-pairwise.adonis2(dist.clr~site/coral.species,as(sample_data(ps),"data.frame"), strata='coral.species')
print(perm)
perm2<-adonis2(dist.clr~colony,as(sample_data(ps),"data.frame"))
print(perm2)
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
View(d.pcx)
View(E.clr)
otu <- read.table("silva_nochloronomito_otu_table_2month.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_2month.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_2month.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
View(otu)
library(dada2)
library(phyloseq)
library(CoDaSeq)
library(vegan)
library(pairwiseAdonis)
library(corncob)
library(ggplot2)
library(randomcoloR)
library(cowplot)
library(knitr)
library(dplyr)
library(reshape2)
library(tibble)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
df_out <- as.data.frame(d.pcx$x)
theme_set(theme_bw()+theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()))
#cols<-c("Colpophyllia natans"="#56B4E9","Diploria labyrinthiformis"="#0072B2")
cols<-c("Initial"="#56B4E9","2-month"="#0072B2")
samples$timepoint<-factor(samples$timepoint,levels=c("Initial","2-month"))
#pdf("PCA.pdf",bg ="white",width=11)
p<-ggplot(df_out,aes(x=PC1,y=PC2,color=samples$timepoint,shape=samples$site))
p<-p+geom_point(size=3)+
theme(axis.title = element_text(size=14))+
theme(axis.text=element_text(size=14))+
theme(legend.title = element_text(size=14))+
theme(legend.text = element_text(size=14))+
theme(strip.text.x = element_text(size=14, face="italic"))+
scale_color_manual(values=cols)+
guides(fill = guide_legend(override.aes=list(shape=21)))+
labs(x=xlab, y=ylab, color="Timepoint",shape="Site")+
#facet_grid(.~samples$coral.species)+
ylim(-50,50)+
xlim(-90,90)+
coord_fixed(ratio=1)
p
View(samples)
otu <- read.table("silva_nochloronomito_otu_table_2month.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_2month.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_2month.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
site<-as.character(samples$site)
species<-as.character(samples$coral.species)
colony<-as.character(samples$colony)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm3<-adonis2(dist.clr~species,as(sample_data(ps),"data.frame"))
print(perm3) #
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf #2032 taxa and 152 samples
# removed 10 samples as above for ps2 that only have counts that were mitochondria or chloroplasts
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0, z.warning=1)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
time<-as.character(samples$timepoint)
site<-as.character(samples$site)
species<-as.character(samples$coral.species)
colony<-as.character(samples$colony)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm4<-pairwise.adonis2(dist.clr~site/coral.species,as(sample_data(ps),"data.frame"), strata='coral.species')
perm4<-pairwise.adonis2(dist.clr~site/coral.species,as(sample_data(ps_qf),"data.frame"), strata='coral.species')
print(perm4)
library(dada2)
library(phyloseq)
library(CoDaSeq)
library(vegan)
library(pairwiseAdonis)
library(corncob)
library(ggplot2)
library(randomcoloR)
library(cowplot)
library(knitr)
library(dplyr)
library(reshape2)
library(tibble)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
otu <- read.table("silva_nochloronomito_otu_table_2month.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_2month.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_2month.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
# collapse ASVs into families
ps_fam = tax_glom(ps_qf, "Family")
ps_fam = tax_glom(ps, "Family")
ps_fam
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam
View(samples)
# DA determined relative to first reference level, so set this manually to the initial timepoint
sample_data(ps_fam)$site<-factor(sample_data(ps_fam)$site,levels=c("Pickles Patch","Looe Key Inshore","West Turtle"))
set.seed(1)
time.da <- differentialTest(formula = ~ site + coral.species,
phi.formula = ~ site,
formula_null = ~ coral.species,
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(time.da)
otu <- read.table("silva_nochloronomito_otu_table_2month.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_2month.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_2month.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps # 2032 taxa and 90 samples
# collapse ASVs into families
ps_fam = tax_glom(ps, "Family")
ps_fam # 320 families and 90 samples
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam # 222 families and 90 samples
sample_data(ps_fam)$site<-factor(sample_data(ps_fam)$site,levels=c("Pickles Patch","Looe Key Inshore","West Turtle"))
set.seed(1)
site.da <- differentialTest(formula = ~ site + coral.species,
phi.formula = ~ site,
formula_null = ~ coral.species,
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(site.da)
site.da
site.da$significant_taxa #18
#quick look at results with corncob's plotting feature
plot(site.da, c("Family"))
sigtaxto_df <- function(site.da, ps_fam) {
df.out <- c()
for (i in 1:length(site.da$significant_models)) { #from 1 to the number of significant taxa
df.out = rbind(df.out, site.da$significant_models[[i]]$coefficients[2, 1:4]) #bind the significant taxa with coefficient, std. error, t value, Pr. coefficients[2,] is the DA model output.
}
asv = as.vector(site.da$significant_taxa) #get significant families
Class = as.vector(otu_to_taxonomy(data = ps_fam, site.da$significant_taxa, level = c("Class")))
Order = as.vector(otu_to_taxonomy(data = ps_fam, site.da$significant_taxa, level = c("Order")))
Family = as.vector(otu_to_taxonomy(data = ps_fam, site.da$significant_taxa, level = c("Family")))
df.bind <- as.data.frame(cbind(df.out, asv, Class, Order, Family))
colnames(df.bind) <- c("Estimate", "StdError", "tvalue", "Pr", "asv", "Class", "Order", "Family")
df.bind$Estimate = as.numeric(as.character(df.bind$Estimate)) #estimate column should be numeric
df.bind$StdError = as.numeric(as.character(df.bind$StdError)) #stderror column should be numeric
return(df.bind)
}
df <- sigtaxto_df(site.da, ps_fam) #make a df of the corncob output and the taxonomy
View(df)
### Save these data so you don't have to re-run the model ###
write.table(df, "DA-Families_site_controlling-coral-species.txt", sep="\t",row.names = FALSE)
#quick look at results with corncob's plotting feature
plot(site.da, c("Family"))
#quick look at results with corncob's plotting feature
plot(site.da, c("Family"))
otu <- read.table("silva_nochloronomito_otu_table_qf.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_qf.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_qf.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps_qf <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps_qf #2032 taxa and 152 samples
# collapse ASVs into families
ps_fam = tax_glom(ps_qf, "Family")
ps_fam # 320 families and 152 samples
ps_fam <- prune_taxa(taxa_sums(ps_fam) > 1, ps_fam) #remove taxa not found in remaining samples
ps_fam #318 families and 152 samples
# DA determined relative to first reference level, so set this manually to the initial timepoint
sample_data(ps_fam)$timepoint<-factor(sample_data(ps_fam)$timepoint,levels=c("Initial","2-month"))
set.seed(1)
time.da <- differentialTest(formula = ~ timepoint + coral.species,
phi.formula = ~ timepoint,
formula_null = ~ coral.species,
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_fam,
fdr_cutoff = 0.05)
summary(time.da)
time.da
time.da$significant_taxa #18
#quick look at results with corncob's plotting feature
plot(time.da, c("Family"))
# Positive values mean that taxon is enriched at 2-month timepoint relative to initial samples
# create a function that will return the values of interest
sigtaxto_df <- function(time.da, ps_fam) {
df.out <- c()
for (i in 1:length(time.da$significant_models)) { #from 1 to the number of significant taxa
df.out = rbind(df.out, time.da$significant_models[[i]]$coefficients[2, 1:4]) #bind the significant taxa with coefficient, std. error, t value, Pr. coefficients[2,] is the DA model output.
}
asv = as.vector(time.da$significant_taxa) #get significant families
Class = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Class")))
Order = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Order")))
Family = as.vector(otu_to_taxonomy(data = ps_fam, time.da$significant_taxa, level = c("Family")))
df.bind <- as.data.frame(cbind(df.out, asv, Class, Order, Family))
colnames(df.bind) <- c("Estimate", "StdError", "tvalue", "Pr", "asv", "Class", "Order", "Family")
df.bind$Estimate = as.numeric(as.character(df.bind$Estimate)) #estimate column should be numeric
df.bind$StdError = as.numeric(as.character(df.bind$StdError)) #stderror column should be numeric
return(df.bind)
}
df <- sigtaxto_df(time.da, ps_fam) #make a df of the corncob output and the taxonomy
### Save these data so you don't have to re-run the model ###
write.table(df, "DA-Families_time_controlling-coral-species.txt", sep="\t",row.names = FALSE)
# families enriched at 2 months: Rickettsiaceae, Eurycoccales Incertae Sedis, Desulfovibrionaceae, Hyphomonadaceae, Vibrionaceae, Cellvibrionaceae, Terasakiellaceae, Campylobacterales
# families enriched at initial timepoint: Cyclobacteriaceae, Amoebophilaceae, Blastocatellaceae, Caminicellaceae, Microtrichaceae, Vicinamibacteria Subgroup 9, Vicinamibacterales, Caldilineaceae, Cyanobacteriaceae, Nitrosopumilaceae
